/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 robot.gltf 
Author: solodovnykov (https://sketchfab.com/solodovnykov)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sachiel-evangelion-3c212c7ce6ac4284a8b718078bc6fc0f
Title: Sachiel - Evangelion
*/

import { useGLTF } from '@react-three/drei';
import React, { FC } from 'react';


interface ModelProps {
  [key: string]: any;
};
declare namespace JSX {
  interface IntrinsicElements {
    group: any,
    geometry: any,
    lineBasicMaterial: any,
    mesh: any,
    octahedronGeometry: any,
    meshBasicMaterial: any,
  }
};

const Model: FC<ModelProps> = (props) => {
  const { nodes, materials } = useGLTF('/robot.gltf');

  return (
    <>
    //@ts-ignore
      {/* <mesh geometry={nodes.Body_low_Body_7_0.geometry} material={materials.Body_7} />
      <mesh geometry={nodes.Body_low_Body_1_0.geometry} material={materials.Body_1} /> */}
    
    <group position={[0.003, 188.229, 84.445]} rotation={[Math.PI / -2, 0, 0]} scale={100}>
      <mesh geometry={nodes.BackBone_low_BackBone_1_0.geometry} material={materials.BackBone_1} />
      <mesh geometry={nodes.BackBone_low_BackBone_2_0.geometry} material={materials.BackBone_2} />
    </group>
    <group position={[0.003, 188.229, 84.445]} rotation={[Math.PI / -2, 0, 0]} scale={100}>
      <mesh geometry={nodes.Shoulders_low_Shoulders_1_0.geometry} material={materials.Shoulders_1} />
      <mesh geometry={nodes.Shoulders_low_Shoulders_2_0.geometry} material={materials.Shoulders_2} />
    </group>
    <group position={[0.003, 188.229, 84.445]} scale={[2.729]}>
      <mesh geometry={nodes.Eye_Material001_0.geometry} material={materials['Material.001']} />
      <mesh geometry={nodes.Eye_Eye_0.geometry} material={materials.material} />
    </group>
    <group position={[-19.297, 232.395, 130.02]} rotation={[-1.537, 0.267, -0.435]} scale={[1.954]}>
      <mesh geometry={nodes['1'].geometry} material={materials.material} />
      <mesh geometry={nodes['0'].geometry} material={materials['Material.001']} />
    </group>
  {/* Other groups and meshes omitted for brevity */ }
    </>
   );
};

useGLTF.preload('/robot.gltf');

export default Model;








